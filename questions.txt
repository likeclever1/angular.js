
1. Как давно ты работаешь с JavaScript?

2. Какие JavaScript-фреймворки тебе приходилось использовать?

3. Писала ли ты когда нибудь свои модули для jQuery?

4. Если да, то какие? Какую задачу они выполняли?

5. Как у тебя обстоят дела с ООП?

6. Какие ты знаешь паттерны проектирования?

7. Назови, пожалуйста, три концепции, лежащих в основе ООП.

8. Каким образом создаются классы в JavaScript, и для чего они нужны.

9. Что такое наследование? 

10. Каким образом можно организовать наследование в JavaScript?

11. Что такое прототипы и каковы их особенности?

12. У нас есть строковый литерал, например, "hello world". Каким образом можно для этой строки добавить новый метод, например, repeat, вызов которого возвращал бы эту же строку, повторенную дважды?

13. Я думаю, что тебе известно, что у объекта типа Object нет свойства length, которое работало бы аналогично таковому в объекте типа Array. Как добавить в объект свойство length, которое бы хранило в себе всегда актуальное количество перечисляемых собственных свойств объекта? (Обращаю внимание, что это свойство не должно быть перечисляемым в цикле for ... in).

14. Какие ты знаешь методы для управлением контекстом функции?

15. Приходилось ли тебе работать с регулярными выражениями?

16. Расскажи, пожалуйста, про области видимости переменных.

17. Что такое инкапсуляция? Зачем она нужна?

18. Каким образом можно реализовать инкапсуляцию на JavaScript?

19. Что такое замыкание? В каких случаях его применяют?

20. Представим, что у нас есть какой-то кусок кода JavaScript. Подключая его на страницу программы, мы хотим, чтобы переменные, объявленные в этом коде не конфликтовали с другими  переменными с такими же именами, объявленными в других частях программы. Как нужно организовать код, чтобы этого достичь?

21. Что выведет в консоли нижеприведенный код? Объясни, почему так.

(function() {
    f();

    f = function() {
        console.log(1);
    }
})()

function f() {
    console.log(2)
}

f();


22. Что выведет в консоли нижеприведенный код? Объясни, почему так.

(function() {
    var x = 1;

    function x() {};
    
    console.log(x);	
})()


23. Что выведет в консоли нижеприведенный код? Объясни, почему так.

var name = 'Alex';
var obj = {
   name: 'Jenny',
   prop: {
      name: 'Piter',
      getName: function() {
         return this.name;
      }
   }
};
 
console.log(obj.prop.getName());
 
var test = obj.prop.getName;
 
console.log(test());


24. Что выведет в консоли нижеприведенный код? Объясни, почему так.

var obj = {
    a: 1
};

(function(obj) {
    obj = {
        a: 2
    };

})(obj);

console.log(obj.a);


